buildscript {
    repositories {
		mavenCentral()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
		jcenter()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.0'
    }
}

// Apply plugin
apply plugin: 'forge'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

// Minimum version of Java required
sourceCompatibility = '1.6'
targetCompatibility = '1.6'

// Basic project information
group = 'cybermaxke'
archivesBaseName = 'elementarrows-forge-v1710'
version = '1.0.0-SNAPSHOT'

// Forge gradle plugin
minecraft {
	version = "1.7.10-10.13.2.1232"
}

// Repositories
repositories {
	mavenCentral()
}

// Dependencies
dependencies {
	compile project(':elementarrows-common')
}

// Shade the dependencies in the jar
shadowJar  {
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude '*'
    dependencies {
        include(dependency(':elementarrows-common'))
    }
    classifier = ''
}
build.dependsOn(shadowJar)

jar {
	// Jar shading and packaging configuration
	from { project(':elementarrows-common').sourceSets.main.output }

	// classifier
	classifier = 'release'

	// exclude textures
	exclude ("**/*.db")

	// exclude empty directories
	includeEmptyDirs = false
}

processResources {
	// This will ensure that this task is redone when the versions change.
	inputs.property "name", project.theName
	inputs.property "version", project.version
	inputs.property "identifier", project.theIdentifier
	inputs.property "description", project.theDescription
	inputs.property "projectpage", project.theProjectPage
	inputs.property "authors", project.theAuthors
	inputs.property "credits", project.theCredits

	// The minecraft version
	inputs.property "mcversion", project.minecraft.version

	// Replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// Replace the properties
		expand([
			'name':project.theName,
			'version':project.version,
			'identifier':project.theIdentifier,
			'description':project.theDescription,
			'projectpage':project.theProjectPage,
			'authors':project.theAuthors,
			'credits':project.theCredits,
			'mcversion':project.minecraft.version
		])
	}

	// Copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude '*.db'
		exclude 'mcmod.info'
	}
}